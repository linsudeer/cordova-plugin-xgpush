10分钟快速指南，请先参考本指南接入
http://developer.xg.qq.com/index.php/Android_SDK%E5%BF%AB%E9%80%9F%E6%8C%87%E5%8D%97

官方网站
http://xg.qq.com

开发者中心
http://developer.xg.qq.com/index.php/Main_Page

常见问题
http://developer.xg.qq.com/index.php/%E5%B8%B8%E8%A7%81%E9%97%AE%E9%A2%98


日期：2016.1.10
版本：V2.42
说明：
1、优化抵达率
2、权限清理
升级提示：
1.使用xg.jar替换旧版本
2.复制libs目录下的文件，替换旧的
	1、复制libtpnsSecurity.so和libtpnsWatchdog.so到工程的libs目录。
	！！注意！！：通常只需要添加armeabi目录即可，若您的工程还有其它平台的.so，请选择对应平台添加上去，具体可自行网上搜索答案。
3.若您的工程没有使用MTA（腾讯云分析），删除mid-sdk-2.10.jar
4.参考AndroidManifest.xml配置相关内容
5.XGPushActivity和用户自定义的MessageReceiver的android:exported建议设置为"false" ，具体请参考demo中的AndroidManifest.xml



日期：2015.3.10
版本：V2.40
说明：
1、信鸽瘦身，减少体积
2、日志优化
3、金刚系统漏洞修复
4、优化长连接提升抵达率
5、已发现bug的修复
升级提示：
1.复制libs目录下的文件，替换旧的
	1、复制libtpnsSecurity.so和libtpnsWatchdog.so到工程的libs目录。
	！！注意！！：通常只需要添加armeabi目录即可，若您的工程还有其它平台的.so，请选择对应平台添加上去，具体可自行网上搜索答案。
2.若您的工程没有使用MTA（腾讯云分析），删除mid-sdk-2.10.jar
3.参考AndroidManifest.xml配置相关内容
4.混淆时，新增项： -keepattributes *Annotation*
5.新增收到通知后弹出通知前的回调接口。
// 为保证弹出通知前一定调用本方法，需要在application的onCreate注册
// 收到通知时，会调用本回调函数。
// 相当于这个回调会在信鸽的弹出通知之前被截取
// 一般上针对需要获取通知内容、标题，设置通知点击的跳转逻辑等等
XGPushManager.setNotifactionCallback(new XGPushNotifactionCallback() {

	@Override
	public void handleNotify(XGNotifaction xGNotifaction) {
		Log.i("test", "处理信鸽通知："+xGNotifaction);
		// 获取标签、内容、自定义内容
		String title = xGNotifaction.getTitle();
		String content = xGNotifaction.getContent();
		String customContent = xGNotifaction.getCustomContent();
		// 其它的处理
		// 如果还要弹出通知，可直接调用以下代码或自己创建Notifaction，否则，本通知将不会弹出在通知栏中。
		xGNotifaction.doNotify();
	}
});


日期：2014.12.02
版本：V2.36
说明：
1、新增卸载监控
2、优化守护进程
3、修复MIUI V6系统存在的bug导致信鸽的问题
4、新增首次注册、后台下发控制命令等功能
5、已发现bug的修复
升级提示：
建议直接复制libs目录下的文件，替换旧的，并参考AndroidManifest.xml配置相关内容
1、复制libtpnsSecurity.so和libtpnsWatchdog.so到工程的libs目录。
！！注意！！：通常只需要添加armeabi目录即可，若您的工程还有其它平台的.so，请选择对应平台添加上去。
1、AndroidManifest.xml文件修改
	a）请参考demo或wiki，根据当前APP包名添加XGRemoteService
        <service
            android:name="com.tencent.android.tpush.rpc.XGRemoteService"
            android:exported="true" >
            <intent-filter>
                <!-- 【必须】 请修改为当前APP包名.PUSH_ACTION-->
                <action android:name="com.tencent.xgpushdemo.PUSH_ACTION" />
            </intent-filter>
        </service>
	b）XGDaemonService守护进程已全面升级，只需添加libtpnsWatchdog.so文到对应的libs即可，若之前使用过守护进程，可删除XGDaemonService的配置项
2、解除绑定账号（别名）接口
	a）新增解除绑定账号（别名）接口。若之前通过registerPush(context, account)绑定过账号（别名），可调用registerPush(context, "*")解除绑定，即设置account为"*"


日期：2014.10.09
版本：V2.35
rdm代号：5098f7b4-5d88-4367-96d6-16bd3a69893a
说明：
1、新增通知/消息的过期时间
2、优化注册逻辑
升级提示：
建议直接复制libs目录下的文件，替换旧的。
1、将Xg_sdk_v2.35.jar替换Xg_sdk_v2.34.jar（如果中间间隔了2个或以上版本，请根据下面老版本到新版本的特性按步骤升级）


日期：2014.09.08
版本：V2.34
rdm代号：f5aa0898-ea1c-4c2f-a390-6802d2fcc84b
说明：
1.支持更丰富的通知样式、在线通知样式
2.新增渠道（应用市场）、游戏大区标签接口
3.新增语言、系统版本等默认标签上报
4.新增消息过期的过滤
5.优化网络等逻辑
5.修复已知bug
升级提示：
建议直接复制libs目录下的文件，替换旧的。
1、将Xg_sdk_v2.34.jar替换老版本，请根据下面老版本到新版本的特性按步骤升级
2、2.34版本不再依赖httpmime-4.1.1.jar库，可以根据需要删除之
3、若工作中的libs目录下没有android-support-v4.jar，请复制到libs目录
		
		
日期：2014.06.12
版本：V2.31
rdm标识：Xg_sdk_v2_20140710_1617
说明：
1.信鸽service守护
2.service存活、消息/通知到达率的全面优化和提升
3.通知到达、点击、清除回调函数新增activity、url和intent的区分
3.默认标签”APP版本“bug的修复
升级提示：
建议直接复制libs目录下的文件，替换旧的
1、替换原来Xg_sdk_xx.jar和所有libtpnsSecurity.so库（请根据支持平台添加）
2、如果需要使用守护进程，保护service并提升抵达率，可通过下面步骤添加（如果不需要请勿操作以下2个步骤）：
	1) 复制libtpnsWatchdog.so到工程的目录（请根据支持平台添加，具体可参考demo或网上资料）
	2) AndroidManifest.xml添加以下行：
	<!-- 【建议】 信鸽service守护进程，可以增加复活机会，提升消息抵达率 -->
	<service
		android:name="com.tencent.android.tpush.service.XGDaemonService"
		android:process=":qq_push_daemon" />

	

日期：2014.05.29
版本：V2.30
说明：
1.信鸽Pro接口
2.优化通知点击，新增通知清除上报
升级提示：
版本升级兼容所有旧版本接口，请根据以下步骤更新即可
1.替换原来Xg_sdk_xx.jar、mid-sdk-xx.jar和所有libtpnsSecurity.so库（请根据支持平台添加）
2.AndroidManifest.xml文件里添加：<activity android:name="com.tencent.android.tpush.XGPushActivity" />
3.原来SDK内部捕获通知和消息的到达，现新增SDK内部捕获通知的点击和清除动作，但如果开发者想监听这些事件，需按以下处理。
	XGPushManager.onActivityStarted(this)获取通知被点击及自定义key-value由原来的onStart()改为onResume()，即改为以下：
	@Override
	protected void onResume() {
		super.onResume();
		XGPushClickedResult click = XGPushManager.onActivityStarted(this);
		if (click != null) { // 判断是否来自信鸽的打开方式
			// 根据实际情况处理...
			// 如获取自定义key-value
		}
	}
	同理，XGPushManager.onActivityStoped(this)由onStop()改为onPause()内调用，即：
	@Override
	protected void onPause() {
		super.onPause();
		XGPushManager.onActivityStoped(this);
	}
	注意：
	1）需要将onActivityStarted和onActivityStoped嵌入到所有可能被打开的activity，建议所有activity都加上。
	2）如果被打开的activity启动模式为SingleTop，SingleTask或SingleInstance，请根据以下在该activity重载onNewIntent方法：
	@Override
	protected void onNewIntent(Intent intent) {
		super.onNewIntent(intent);		
		setIntent(intent);// 必须要调用这句
	}	
4.新增通知在通知栏被清除时的回调，即自定义Receiver（重载XGPushBaseReceiver）的onNotifactionClickedResult重载方法中区分点击和清除动作，XGPushClickedResult添加getActionType()，其中XGPushClickedResult.NOTIFACTION_CLICKED_TYPE表示点击操作，XGPushClickedResult.NOTIFACTION_DELETED_TYPE表示清除操作。即：
	@Override
	public void onNotifactionClickedResult(Context context,
			XGPushClickedResult message) {
		if (context == null || message == null) {
			return;
		}
		if (message.getActionType() == XGPushClickedResult.NOTIFACTION_CLICKED_TYPE) {
			// 通知在通知栏被点击啦。。。。。
			// APP自己处理点击的相关动作
			// 这个动作可以在activity的onResume也能监听，请看第3点相关内容
		} else if (message.getActionType() == XGPushClickedResult.NOTIFACTION_DELETED_TYPE) {
			// 通知被清除啦。。。。
			// APP自己处理通知被清除后的相关动作
		}
	}

日期：2014.05.20
版本：V2.21
说明：
1.bug修复
2.更新mid库
升级提示（强烈建议以前的版本升级）：
版本升级兼容所有旧版本接口，请根据以下步骤更新即可
1.删除mid-1.0.0.jar，并添加mid-sdk-2.0.jar
2.替换原来Xg_sdk_xx.jar和所有libtpnsSecurity.so库（请根据支持平台添加）
3.接入MSDK的游戏如果存在jce库冲突，请删除信鸽wup-xxx.jar库



日期：2014.05.16
版本：V2.20
升级提示：
1.替换原来xg_sdk_xx.jar、mid-1.0.0.jar以及所有.so库
2.新增本地通知接口：XGPushManager.addLocalNotification()
3.新增清除本地通知接口：XGPushManager.clearLocalNotifications()
4.新增设置通知默认样式接口：XGPushManager.setDefaultNotificationBuilder

日期：2014.02.20
版本：V2.1
升级提示：
V2.1修复了V2.0反馈的问题，并提供多包名、在activity获取自定义key-value等特性，升级时，需要注意以下事项。
1.XGPushBaseReceiver新增onNotifactionShowedResult(Context, XGPushShowedResult)接口，可以获取被展示的通知内容
2.XGPushManager.onActivityStarted(Activity)的返回值由void升级为XGPushClickedResult，可以以此获取被点击的通知内容、自定义key-value等。
3.优化注册过程，废弃startPushService(Context)，直接使用registerPush接口即可启动并注册


日期：2014.01.20
版本：V2.0
升级提示：V2.0版本与V1.x.x版本是2个完全不同的SDK，API接口不兼容，升级时，需要按照新SDK文档重新开始，同时，后台相关的API接口也会存在不兼容的情况，请慎重。